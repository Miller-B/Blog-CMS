<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
              xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc.xsd
                           http://www.springframework.org/schema/tx 
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd"> 

    <!-- Bean definitions go here -->
    
    <tx:annotation-driven/>

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
          <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
          <property name="url" value ="jdbc:mysql://localhost:3306/blogdatabasetest"/>
          <property name="username" value="root" />
          <property name="password" value="5077" />
          <property name="initialSize" value="5" />
          <property name="maxTotal" value="10" />
    </bean>
    
    <bean id ="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
<!--    DAO BEANS-->

    <bean id="categoryDao" class="Blog.Dao.CategoryDaoImplementation">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>
    
    <bean id="hashtagDao" class="Blog.Dao.HashtagDaoImplementation">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>
    
    <bean id="imageDao" class="Blog.Dao.ImageDaoImplementation">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>
    
    <bean id="postDao" class="Blog.Dao.PostDaoImplementation">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>
    
    <bean id="postHashtagDao" class="Blog.Dao.PostHashtagDaoImplementation">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>
    
    <bean id="roleDao" class="Blog.Dao.RoleDaoImplementation">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>
    
    <bean id="staticPageDao" class="Blog.Dao.StaticPageDaoImplementation">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>
    
    <bean id="userDao" class="Blog.Dao.UserDaoImplementation">
        <property name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>

<!--    SERVICE BEANS-->

    <bean id="categoryService" class="Blog.Service.CategoryServiceImplementation">
        <constructor-arg ref="categoryDao"/>
    </bean>
    
    <bean id="hashtagService" class="Blog.Service.HashtagServiceImplementation">
        <constructor-arg ref="hashtagDao"/>
        <property name="postService" ref="postService"/>
    </bean>
    
    <bean id="imageService" class="Blog.Service.ImageServiceImplementation">
        <constructor-arg ref="imageDao"/>
    </bean>
    
    <bean id="userService" class="Blog.Service.UserServiceImplementation">
        <constructor-arg ref="userDao"/>
        <property name="roleService" ref="roleService"/>
        <property name="categoryService" ref="categoryService"/>
        <property name="staticPageService" ref="staticPageService"/>        
    </bean>    
    
    <bean id="postService" class="Blog.Service.PostServiceImplementation">
        <constructor-arg ref="postDao"/>
        <property name="categoryService" ref="categoryService"/>
        <property name="userService" ref="userService"/>
        <property name="hashtagService" ref="hashtagService"/>
        <property name="postHashtagDao" ref="postHashtagDao"/>
        <property name="staticPageService" ref="staticPageService"/>
    </bean>
    
    <bean id="roleService" class="Blog.Service.RoleServiceImplementation">
        <constructor-arg ref="roleDao"/>
        <property name="userService" ref="userService"/>
    </bean>
    
    <bean id="staticPageService" class="Blog.Service.StaticPageServiceImplementation">
        <constructor-arg ref="staticPageDao"/>
        <property name="categoryService" ref="categoryService"/>
    </bean>
    
     <bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
    </bean>
<!--    DATABASE INJECTION BEAN-->

    <bean id="dbInjection" class="Blog.ApplicationContextHelper.TestingDataInjector.TestingDataInjector">
        <constructor-arg ref="jdbcTemplate"/>
    </bean>
    
</beans>
